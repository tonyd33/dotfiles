# General {{{

set-option -g default-shell "/bin/zsh"

# Correct Colors
set-option -g default-terminal "tmux-256color"

# Terminal Overrides
set -ga terminal-overrides ",*256col*:Tc"

set -g history-limit 20000
set-option -g focus-events on

# Automatic Window Renumbering
set -g renumber-windows on

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0

# tile all windows
unbind =
bind = select-layout tiled
unbind +
bind + select-layout even-horizontal

set-option -g set-titles on
set-option -g set-titles-string "#T - #W"
# set-window-option -g automatic-rename on

# Mouse Support
setw -g mouse on

# }}}

# Key Binds {{{

# Reload Config
bind r source-file ~/.tmux.conf \; display " Config reloaded! "

# Split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Synchronize all panes in a window
bind y setw synchronize-panes

# Pane Movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind -r C-p last-window

# Resize Pane
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# }}}

# Vi Keys {{{

# Set Vi mode for copy
setw -g mode-keys vi

# Making copy mode more Vi like
unbind [
bind a copy-mode
unbind p
bind p paste-buffer
bind -T copy-mode-vi v send -X begin-selection

bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'

# }}}

# Status Bar {{{

# Colors {{{

status_bar_bg=black
active_window_bg=green
inactive_window_bg=black
session_bg=blue
time_bg=green
hostname_bg=green

status_bar_fg=black
active_window_fg=black
inactive_window_fg=white
session_fg=black
time_fg=black
hostname_fg=black

# }}}

set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5
set -g status-justify left
set-option -g status-position bottom

set-window-option -g window-status-separator ''

set-option -g status-style fg=$status_bar_fg,bg=$status_bar_bg

# Glyphs {{{

lsemi="" # \ue0b6
rsemi="" # \ue0b4

rtri="" # \ue0b0
ltri="" # \ue0b2

rfire="" # \ue0c0
lfire="" # \ue0c2

rcut="" # \ue0bc
lcut="" # \ue0be

# }}}

rglyph=$rtri
lglyph=$ltri

# inactive window
set-window-option -g window-status-format "#[fg=$status_bar_bg,bg=$inactive_window_bg]$rglyph #[fg=$inactive_window_fg]#I:#W #[fg=$status_bar_fg,bg=$status_bar_bg]$rglyph"

# active window
set-window-option -g window-status-current-format "#[fg=$active_window_fg,bg=$active_window_bg]$rglyph #I:#W #[fg=$active_window_bg,bg=$status_bar_bg]$rglyph"

# pane border colors
set-window-option -g pane-active-border-style fg=green
set-window-option -g pane-border-style fg=black

# message text
set-option -g message-style bg=$status_bar_bg,fg=white

# pane number display
set-option -g display-panes-active-colour blue
set-option -g display-panes-colour yellow

# clock
set-window-option -g clock-mode-colour brightyellow

# session name
tm_session_name="#[default,bg=$session_bg,fg=$session_fg] #S #[fg=$session_bg,bg=$status_bar_bg]$rglyph"
set -g status-left "$tm_session_name"

# time
tm_date="#[fg=$time_bg]$lglyph#[default,bg=$time_bg,fg=$time_fg] %R #[fg=$status_bar_bg]$lglyph"

# hostname
tm_host="#[fg=$hostname_bg,bg=$status_bar_bg]$lglyph#[fg=$hostname_fg,bg=$hostname_bg] #h"

set -g status-right "$tm_host "

# }}}

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# vim:fileencoding=utf-8:foldmethod=marker
